/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package RentalSystem;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class adminManageBooking extends javax.swing.JFrame {

    /**
     * Creates new form adminManageBooking
     */
    private TableRowSorter<TableModel> sorter;

    public adminManageBooking() {
        initComponents();
        initSearch();
        bAll.setSelected(true);
        populateTable();
        addTableListener();
        bAction.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tBooking = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bBack = new javax.swing.JButton();
        bAction = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        sUsername = new javax.swing.JLabel();
        sStartDate = new javax.swing.JLabel();
        sEndDate = new javax.swing.JLabel();
        sPayAmount = new javax.swing.JLabel();
        sBookID = new javax.swing.JLabel();
        sCarName = new javax.swing.JLabel();
        sCarType = new javax.swing.JLabel();
        sBookingStatus = new javax.swing.JLabel();
        bCancelled = new javax.swing.JRadioButton();
        bComplete = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        bDone = new javax.swing.JRadioButton();
        bAll = new javax.swing.JRadioButton();
        tMessage = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cUniqueID = new javax.swing.JComboBox<>();
        bRefunded = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Car Rental System");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Manage Booking");

        tBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tBooking.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tBooking);

        jLabel3.setText("Booking ID:");

        jLabel4.setText("Car Name:");

        jLabel5.setText("Car Type:");

        jLabel6.setText("Booking Status:");

        jLabel7.setText("Start Date:");

        jLabel8.setText("End Date:");

        jLabel9.setText("Payment Amount:");

        bBack.setText("Back");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        bAction.setText("Complete");
        bAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionActionPerformed(evt);
            }
        });

        jLabel10.setText("Username:");

        sUsername.setText("-");

        sStartDate.setText("-");

        sEndDate.setText("-");

        sPayAmount.setText("-");

        sBookID.setText("-");

        sCarName.setText("-");

        sCarType.setText("-");

        sBookingStatus.setText("-");

        buttonGroup1.add(bCancelled);
        bCancelled.setText("Pending Refund");
        bCancelled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelledActionPerformed(evt);
            }
        });

        buttonGroup1.add(bComplete);
        bComplete.setText("Pending Return");
        bComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCompleteActionPerformed(evt);
            }
        });

        jLabel19.setText("View:");

        buttonGroup1.add(bDone);
        bDone.setText("Completed");
        bDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDoneActionPerformed(evt);
            }
        });

        buttonGroup1.add(bAll);
        bAll.setText("All");
        bAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAllActionPerformed(evt);
            }
        });

        tMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tMessage.setText("Select record to view booking details:");

        jLabel11.setText("Search:");

        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        jLabel12.setText("by");

        cUniqueID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Booking ID", "Username" }));
        cUniqueID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cUniqueIDActionPerformed(evt);
            }
        });

        buttonGroup1.add(bRefunded);
        bRefunded.setText("Refunded");
        bRefunded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRefundedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sBookingStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sBookID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sCarName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sCarType, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sPayAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bAction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBack))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(bAll)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bCancelled)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bComplete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bDone, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tMessage, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bRefunded, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel2)))))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelled)
                    .addComponent(bComplete)
                    .addComponent(jLabel19)
                    .addComponent(bDone)
                    .addComponent(bAll)
                    .addComponent(jLabel11)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bRefunded))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tMessage)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(sBookID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(sCarName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sCarType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(sBookingStatus)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(sUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(sStartDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(sEndDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(sPayAmount))))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBack)
                    .addComponent(bAction))
                .addGap(16, 16, 16))
        );

        getContentPane().add(tfSearch);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelledActionPerformed
        JOptionPane.showMessageDialog(rootPane, "You are viewing bookings cancelled by customers.");
        bAction.setText("Refund");
        bAction.setVisible(true);
        bComplete.setSelected(false);
        bDone.setSelected(false);
        bAll.setSelected(false);
        bRefunded.setSelected(false);
        populateTable();
    }//GEN-LAST:event_bCancelledActionPerformed

    private void bCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCompleteActionPerformed
        JOptionPane.showMessageDialog(rootPane, "You are viewing bookings paid.");
        bAction.setText("Complete");
        bAction.setVisible(true);
        bCancelled.setSelected(false);
        bComplete.setSelected(false);
        bAll.setSelected(false);
        bRefunded.setSelected(false);
        populateTable();
    }//GEN-LAST:event_bCompleteActionPerformed

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        String searchQuery = tfSearch.getText();
        System.out.println("Search Query: " + searchQuery);
        System.out.println("Selected Item: " + cUniqueID.getSelectedItem());

        if (!searchQuery.isEmpty()) {
            RowFilter<TableModel, Object> rf = null;
            if (cUniqueID.getSelectedItem().equals("Booking ID")) {
                rf = RowFilter.regexFilter("(?i)" + searchQuery, 0); // Column index 0 corresponds to Booking ID
            } else if (cUniqueID.getSelectedItem().equals("Username")) {
                rf = RowFilter.regexFilter("(?i)" + searchQuery, 1); // Column index 1 corresponds to Username
            }
            if (rf != null) {
                sorter.setRowFilter(rf);
            }
        } else {
            resetSearch();
        }
    }//GEN-LAST:event_tfSearchActionPerformed

    private void bAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAllActionPerformed
        JOptionPane.showMessageDialog(rootPane, "You are viewing all bookings.");    
        bAction.setVisible(false);
        bCancelled.setSelected(false);
        bComplete.setSelected(false);
        bDone.setSelected(false);
        bRefunded.setSelected(false);
        populateTable();
    }//GEN-LAST:event_bAllActionPerformed

    private void bDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDoneActionPerformed
        JOptionPane.showMessageDialog(rootPane, "You are viewing bookings completed.");
        bAction.setVisible(false);
        bCancelled.setSelected(false);
        bComplete.setSelected(false);
        bAll.setSelected(false);
        populateTable();
    }//GEN-LAST:event_bDoneActionPerformed

    private void bRefundedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRefundedActionPerformed
        JOptionPane.showMessageDialog(rootPane, "You are viewing bookings refunded.");
        bAction.setVisible(false);
        bCancelled.setSelected(false);
        bComplete.setSelected(false);
        bDone.setSelected(false);
        bAll.setSelected(false);
        populateTable();
    }//GEN-LAST:event_bRefundedActionPerformed

    private void bActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionActionPerformed
        if (bComplete.isSelected()){
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to mark as complete?");
            if (confirm == JOptionPane.YES_OPTION){
                int currentBookID = Integer.parseInt(sBookID.getText());
                Booking booking = new Booking(currentBookID);
                booking.updateStatus(currentBookID);
                JOptionPane.showMessageDialog(rootPane, "Booking marked as completed.");
            }
        } else if (bCancelled.isSelected()){
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to approve cancellation and proceed refund?");
            if (confirm == JOptionPane.YES_OPTION){
                int currentBookID = Integer.parseInt(sBookID.getText());
                Booking booking = new Booking(currentBookID);
                booking.updateStatus(currentBookID);
                JOptionPane.showMessageDialog(rootPane, "Cancellation approved and refund successfully.");
            } else if (confirm == JOptionPane.NO_OPTION){
                int currentBookID = Integer.parseInt(sBookID.getText());
                Booking booking = new Booking(currentBookID);
                booking.updateStatus(currentBookID);
                JOptionPane.showMessageDialog(rootPane, "Cancellation request denied.");
            } 
        }
        populateTable(); //refresh table
    }//GEN-LAST:event_bActionActionPerformed

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        dispose();
        adminMain frame = new adminMain();
        frame.setVisible(true);
    }//GEN-LAST:event_bBackActionPerformed

    private void cUniqueIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cUniqueIDActionPerformed
        
    }//GEN-LAST:event_cUniqueIDActionPerformed

    /**
     * @param args the command line arguments
     */
    private void initSearch() {
        sorter = new TableRowSorter<>(tBooking.getModel());
        tBooking.setRowSorter(sorter);
    }

    private void resetSearch() {
        tfSearch.setText("");
        sorter.setRowFilter(null);
    }

    private void addTableListener() {
        tBooking.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tBooking.getSelectedRow();
                    if (selectedRow != -1) {
                        //get the selected row data
                        String bookingID = (String) tBooking.getValueAt(selectedRow, 0);
                        String username = (String) tBooking.getValueAt(selectedRow, 1);
                        String carName = (String) tBooking.getValueAt(selectedRow, 2);
                        String carType = (String) tBooking.getValueAt(selectedRow, 3);
                        String startDate = (String) tBooking.getValueAt(selectedRow, 4);
                        String endDate = (String) tBooking.getValueAt(selectedRow, 5);
                        String payAmount = (String) tBooking.getValueAt(selectedRow, 6);
                        String bookStatus = (String) tBooking.getValueAt(selectedRow, 7);
                        //set the data to text fields
                        sBookID.setText(bookingID);
                        sUsername.setText(username);
                        sCarName.setText(carName);
                        sCarType.setText(carType);
                        sStartDate.setText(startDate);
                        sEndDate.setText(endDate);
                        sPayAmount.setText(payAmount);
                        sBookingStatus.setText(bookStatus);
                    }
                }
            }
        });
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tBooking.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        //header
        model.addColumn("Booking ID");
        model.addColumn("Username");
        model.addColumn("Car Name");
        model.addColumn("Car Type");
        model.addColumn("Start Date");
        model.addColumn("End Date");
        model.addColumn("Payment Amount");
        model.addColumn("Status");

        try (BufferedReader reader = new BufferedReader(new FileReader("booking.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] record = line.split(",");
                String rBookingID = record[0];
                String rCarID = record[1];
                String rStartDate = record[2];
                String rEndDate = record[3];
                String rPayAmount = record[5];
                String rBookingStatus = record[6];
                String rUser = record[7];

                //get car details based on car ID
                Car car = new Car();
                String[] carDetails = car.getCarDetails(rCarID);

                //check the selected radio button and filter bookings accordingly
                if (bAll.isSelected()) {
                    //add the booking details to the model
                    model.addRow(new Object[]{rBookingID, rUser, carDetails[0], carDetails[1], rStartDate, rEndDate, "RM" + rPayAmount, rBookingStatus});
                } else if (bComplete.isSelected() && rBookingStatus.equals("PAID")) {
                    //add the booking details to the model
                    model.addRow(new Object[]{rBookingID, rUser, carDetails[0], carDetails[1], rStartDate, rEndDate, "RM" + rPayAmount, rBookingStatus});
                } else if (bCancelled.isSelected() && rBookingStatus.equals("CANCELLED")) {
                    //add the booking details to the model
                    model.addRow(new Object[]{rBookingID, rUser, carDetails[0], carDetails[1], rStartDate, rEndDate, "RM" + rPayAmount, rBookingStatus});
                } else if (bDone.isSelected() && rBookingStatus.equals("COMPLETED")) {
                    //add the booking details to the model
                    model.addRow(new Object[]{rBookingID, rUser, carDetails[0], carDetails[1], rStartDate, rEndDate, "RM" + rPayAmount, rBookingStatus});
                } else if (bRefunded.isSelected() && rBookingStatus.equals("REFUNDED")) {
                    //add the booking details to the model
                    model.addRow(new Object[]{rBookingID, rUser, carDetails[0], carDetails[1], rStartDate, rEndDate, "RM" + rPayAmount, rBookingStatus});
                }
                tBooking.setModel(model);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Set the model to the table
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminManageBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAction;
    private javax.swing.JRadioButton bAll;
    private javax.swing.JButton bBack;
    private javax.swing.JRadioButton bCancelled;
    private javax.swing.JRadioButton bComplete;
    private javax.swing.JRadioButton bDone;
    private javax.swing.JRadioButton bRefunded;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cUniqueID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel sBookID;
    private javax.swing.JLabel sBookingStatus;
    private javax.swing.JLabel sCarName;
    private javax.swing.JLabel sCarType;
    private javax.swing.JLabel sEndDate;
    private javax.swing.JLabel sPayAmount;
    private javax.swing.JLabel sStartDate;
    private javax.swing.JLabel sUsername;
    private javax.swing.JTable tBooking;
    private javax.swing.JLabel tMessage;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package RentalSystem;

import java.util.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Year;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class customerPayment extends javax.swing.JFrame {

    /**
     * Creates new form customerPayment
     */
    public customerPayment() {
        initComponents();
        displayBookingDetails();
        displayYear();
        displayMonth();
        displayButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfHoldName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfCardNum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfCvv = new javax.swing.JTextField();
        tfMonth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfYear = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        bPay = new javax.swing.JButton();
        bBack = new javax.swing.JButton();
        sCarName = new javax.swing.JLabel();
        sCarType = new javax.swing.JLabel();
        sCarRate = new javax.swing.JLabel();
        sStartDate = new javax.swing.JLabel();
        sEndDate = new javax.swing.JLabel();
        sTotal = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        sBookingID = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        sCurrPoint = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tfRedeemPoints = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        sPointBalance = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Car Rental System");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Payment");

        jLabel3.setText("Cardholder's Name:");

        tfHoldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHoldNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Card Number:");

        tfCardNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCardNumActionPerformed(evt);
            }
        });

        jLabel5.setText("Expiration Date: ");

        jLabel6.setText("CVV:");

        tfCvv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCvvActionPerformed(evt);
            }
        });

        tfMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMonthActionPerformed(evt);
            }
        });

        jLabel7.setText("/");

        tfYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfYearActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Booking Details:");

        jLabel9.setText("Car Name:");

        jLabel10.setText("Car Type:");

        jLabel11.setText("Start Date:");

        jLabel12.setText("End Date:");

        jLabel13.setText("Car Rate:");

        jLabel14.setText("Payment Total:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Payment Details:");

        jLabel16.setText("üëçFree cancellation 48 hours before pick-up, 20% fee thereafter.");

        bPay.setText("Pay");
        bPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPayActionPerformed(evt);
            }
        });

        bBack.setText("Back");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        sCarName.setText("Name");

        sCarType.setText("Type");

        sCarRate.setText("Rate");

        sStartDate.setText("Start Date");

        sEndDate.setText("End Date");

        sTotal.setText("Total");

        jLabel17.setText("Booking ID:");

        sBookingID.setText("Booking ID");

        jLabel18.setText("Rewards Point:");

        sCurrPoint.setText("Point");

        jLabel20.setText("‚ùó Any cancellation request within 48 hours before pick-up");

        jLabel21.setText("will be subject to admin's approval.");

        jLabel22.setText("Redeem Points:");

        jLabel19.setText("Point Balance:");

        sPointBalance.setText("Balance");

        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("‚ùóKindly note redeemed points are strictly non-refundable.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1))
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(203, 203, 203)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(tfCvv, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(129, 129, 129)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfHoldName)
                                        .addComponent(tfCardNum, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(bPay)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bBack))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sPointBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel22)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfRedeemPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel20)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel21)))
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(sCarType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sCarName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sCarRate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sBookingID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(26, 26, 26))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(sStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sCurrPoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 27, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(sStartDate)
                    .addComponent(jLabel17)
                    .addComponent(sBookingID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(sEndDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(sTotal)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(sCarName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(sCarType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(sCarRate)
                            .addComponent(jLabel18)
                            .addComponent(sCurrPoint))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addGap(10, 10, 10)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(tfRedeemPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(sPointBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfHoldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfCardNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCvv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bPay)
                    .addComponent(bBack))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tfYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year" }));
        tfYear.setEditable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMonthActionPerformed
        displayButton();
    }//GEN-LAST:event_tfMonthActionPerformed

    private void tfYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfYearActionPerformed
        displayButton();
    }//GEN-LAST:event_tfYearActionPerformed

    private void tfHoldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHoldNameActionPerformed
        displayButton();
    }//GEN-LAST:event_tfHoldNameActionPerformed

    private void tfCardNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCardNumActionPerformed
        displayButton();
    }//GEN-LAST:event_tfCardNumActionPerformed

    private void tfCvvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCvvActionPerformed
        displayButton();
    }//GEN-LAST:event_tfCvvActionPerformed

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        int bookingID = Integer.parseInt(sBookingID.getText()); 

        try (BufferedReader br = new BufferedReader(new FileReader("booking.txt"))) {
            List<String> lines = new ArrayList<>();
            String line;
            while ((line = br.readLine()) != null) {
                String[] tokens = line.split(",");

                //check if the booking ID matches the current booking ID and the status is "PROCESSING PAYMENT"
                if (!tokens[tokens.length - 2].equals("PROCESSING PAYMENT") && tokens[7].equals(String.valueOf(UserSession.getUsername()))) {
                    if (Integer.parseInt(tokens[0]) != bookingID) { 
                        lines.add(line);
                    }
                }
            }

            //delete initial booking record
            try (BufferedWriter bw = new BufferedWriter(new FileWriter("booking.txt"))) {
                for (String updatedLine : lines) {
                    bw.write(updatedLine);
                    bw.newLine();
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        dispose();
        customerCarBooking frame = new customerCarBooking();
        frame.setVisible(true);
    }//GEN-LAST:event_bBackActionPerformed

    private void bPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPayActionPerformed
        String holderName = tfHoldName.getText().trim();
        String cardNum = tfCardNum.getText().trim();
        String month = (String) tfMonth.getSelectedItem();
        String year = (String) tfYear.getSelectedItem();
        String cvv = tfCvv.getText().trim();

        //validate CVV and card number length
        if (validateCardNum(cardNum) && validateCvv(cvv)) {
            try (BufferedReader br = new BufferedReader(new FileReader("booking.txt"))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] tokens = line.split(",");
                    int bookingID = Integer.parseInt(tokens[0]);

                    if (bookingID == Integer.parseInt(sBookingID.getText())) { //check if the retrieved booking ID matches the one displayed
                        int carID = Integer.parseInt(tokens[1]);
                        String startDate = tokens[2];
                        String endDate = tokens[3];
                        double paymentTotal = Double.parseDouble(tokens[5]);

                        //check if points redemption is within the valid range
                        int redeemPoints = (int) tfRedeemPoints.getValue();
                        int currentPoints = Integer.parseInt(sPointBalance.getText());

                        if (redeemPoints > currentPoints) {
                            JOptionPane.showMessageDialog(rootPane, "Points to redeem exceeds current balance.");
                            return; 
                        } else if (redeemPoints < 0) {
                            JOptionPane.showMessageDialog(rootPane, "Points to redeem exceeds is negative.");
                            return;
                        }

                        double newPaymentTotal = paymentTotal - redeemPoints; 
                        
                        Customer customer = new Customer(UserSession.getUsername(), "");
                        customer.deductPoints(redeemPoints);

                        Booking booking = new Booking(bookingID, carID, startDate, endDate);
                        booking.writeBookingDetails(cardNum, newPaymentTotal, bookingID); 

                        JOptionPane.showMessageDialog(rootPane, "Payment successful.");
                        dispose();
                        customerReceipt frame = new customerReceipt(bookingID);
                        frame.setVisible(true);
                        return; 
                    }
                }
                //if no matching booking is found
                JOptionPane.showMessageDialog(rootPane, "No matching booking found.");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "An error occurred while saving payment details.");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Please enter a valid CVV.");
            }
        } else {
            //CVV or card number is invalid, show error message
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid card number and CVV.");
        }
    }//GEN-LAST:event_bPayActionPerformed

    /**
     * @param args the command line arguments
     */
    private boolean validateCardNum(String cardNum){
        return cardNum.length() == 16 && cardNum.matches("\\d{16}");
    }
    
    private boolean validateCvv(String cvv){
        return cvv.matches("\\d{3}");
    }
    
    //displaying booking details (booking dates & payment amount)
    private void displayBookingDetails() {
        try (BufferedReader br = new BufferedReader(new FileReader("booking.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] tokens = line.split(",");
                //extract the relevant parameters
                int bookingID = Integer.parseInt(tokens[0]);
                String carID = tokens[1];
                String startDate = tokens[2];
                String endDate = tokens[3];
                double paymentTotal = Double.parseDouble(tokens[5]);
                Customer customer = new Customer(UserSession.getUsername());
                int pointBalance = customer.getPoints();
                int earnablePoints = customer.calculateEarnablePoints(paymentTotal);
                displayCarDetails(carID);
                //display
                sBookingID.setText(String.valueOf(bookingID));
                sStartDate.setText(String.valueOf(startDate));
                sEndDate.setText(String.valueOf(endDate));
                sTotal.setText("RM "+String.valueOf(paymentTotal));
                sCurrPoint.setText(String.valueOf(earnablePoints));
                sPointBalance.setText(String.valueOf(pointBalance));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    //displaying car details for the selected car
    private void displayCarDetails(String carID) {
        try {
            Car car = new Car();
            String[] carDetails = car.getCarDetails(carID);

            //display car details
            sCarName.setText(carDetails[0]);
            sCarType.setText(carDetails[1]);
            sCarRate.setText(carDetails[2]);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    //display month and year in drop down
    public void displayYear(){
        int currentYear = Year.now().getValue();
        for (int year = currentYear; year <= currentYear + 40; year++) {
            tfYear.addItem(String.valueOf(year));
        }
    }
    
    private void displayMonth() {
        tfMonth.addItem("Month");
        String[] months = {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"};

        for (String month : months) {
            tfMonth.addItem(month);
        }
    }

    //check if all fields are filled in
    public void displayButton(){
        boolean allFilled = !tfHoldName.getText().isEmpty() &&
                            !tfCardNum.getText().isEmpty() &&
                            !tfCvv.getText().isEmpty() &&
                            tfMonth.getSelectedIndex() != 0 &&
                            tfYear.getSelectedIndex() != 0;
    
        bPay.setEnabled(allFilled);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customerPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBack;
    private javax.swing.JButton bPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel sBookingID;
    private javax.swing.JLabel sCarName;
    private javax.swing.JLabel sCarRate;
    private javax.swing.JLabel sCarType;
    private javax.swing.JLabel sCurrPoint;
    private javax.swing.JLabel sEndDate;
    private javax.swing.JLabel sPointBalance;
    private javax.swing.JLabel sStartDate;
    private javax.swing.JLabel sTotal;
    private javax.swing.JTextField tfCardNum;
    private javax.swing.JTextField tfCvv;
    private javax.swing.JTextField tfHoldName;
    private javax.swing.JComboBox<String> tfMonth;
    private javax.swing.JSpinner tfRedeemPoints;
    private javax.swing.JComboBox<String> tfYear;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package RentalSystem;

import java.util.HashSet;
import java.util.Set;
import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class customerCarBooking extends javax.swing.JFrame {

    /**
     * Creates new form customerCarBooking
     */
    public customerCarBooking(){
        initComponents();
        //table creation and data insertion
        cbCar.addItem("Please Select a Car");
        DefaultTableModel model = (DefaultTableModel) tCar.getModel();
        String[] columnHeaders = {"CarID", "Car Name", "Car Type", "Car Rate (per Hour)", "Availability"};
        model.setColumnIdentifiers(columnHeaders);
        try {
        BufferedReader carBr = new BufferedReader(new FileReader("car.txt"));
        String line;
        while((line = carBr.readLine()) != null){
            String record[] = line.split(",");
            String rCarID = record[0];
            String rCarName = record[1];
            String rCarType = record[2];
            String rCarRate = record[3];
            String rDeletion = record[4];
            if(rDeletion.equals("Deleted")){
                continue;
            }
            Car car = new Car(Integer.parseInt(rCarID));
            car.setDeletionStatus(rDeletion);
            String rCarAvailability = car.checkAvail();
            String[] row = {rCarID, rCarName, rCarType, rCarRate, rCarAvailability};
            model.addRow(row);
            if(rCarAvailability.equals("Available")){
                cbCar.addItem(rCarID);
            }
        }
        
        }
        catch (IOException e){
            e.printStackTrace();
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCar = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        bBook = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbCar = new javax.swing.JComboBox<>();
        bBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfStartDate = new javax.swing.JTextField();
        tfEndDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Car Booking");

        tCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tCar.setEnabled(false);
        jScrollPane1.setViewportView(tCar);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Select one available car in the table to book:");

        bBook.setBackground(new java.awt.Color(153, 255, 102));
        bBook.setText("Book Car");
        bBook.setEnabled(false);
        bBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBookActionPerformed(evt);
            }
        });

        jLabel3.setText("Selected CarID:");

        cbCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCarActionPerformed(evt);
            }
        });

        bBack.setBackground(new java.awt.Color(255, 0, 102));
        bBack.setForeground(new java.awt.Color(255, 255, 255));
        bBack.setText("Back");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        jLabel4.setText("Start Date:");

        jLabel5.setText("End Date:");

        tfStartDate.setEditable(false);
        tfStartDate.setEnabled(false);
        tfStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfStartDateFocusLost(evt);
            }
        });
        tfStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfStartDateActionPerformed(evt);
            }
        });

        tfEndDate.setEditable(false);
        tfEndDate.setEnabled(false);
        tfEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEndDateFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Note: Only card payments are accepted.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(137, 137, 137))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(bBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(113, 113, 113))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbCar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfStartDate)
                            .addComponent(tfEndDate)))
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBack)
                    .addComponent(bBook))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBookActionPerformed
        //creating calendar objects and format objects
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Calendar sDate = new GregorianCalendar();
        Calendar eDate = new GregorianCalendar();
        Calendar cDate = new GregorianCalendar();
        try{
            String startDate = tfStartDate.getText();
            String endDate = tfEndDate.getText();
            sDate.setTime(format.parse(startDate));
            eDate.setTime(format.parse(endDate));
            String currentDate = format.format(cDate.getTime());
            if(eDate.before(sDate)){ //checks for end and start date compatibility
                JOptionPane.showMessageDialog(rootPane, "The end date can not be before the start date.");
            }
            else if(currentDate.compareTo(startDate)>0){ //compares start date to today
                JOptionPane.showMessageDialog(rootPane, "The start date can not be before today.");
            }
            else if(currentDate.compareTo(endDate)>0){ //compares end date to today
                JOptionPane.showMessageDialog(rootPane, "The end date can not be before today.");
            }
            else{
                if(tfStartDate.getText().equals("")){ //checks for input
                    JOptionPane.showMessageDialog(rootPane, "Please enter a booking start date.");
                }
                else if (tfEndDate.getText().equals("")){ //checks for input
                    JOptionPane.showMessageDialog(rootPane, "Please enter a booking end date.");
                }
                else{
                    int carID = Integer.parseInt(cbCar.getSelectedItem().toString());
                    //creating booking object to check booking eligibility and execute appropriate action
                    Booking booking = new Booking(carID, startDate, endDate);
                    String validity = booking.checkBooking();
                    switch (validity) {
                        case "invalidS":
                            JOptionPane.showMessageDialog(rootPane, "The start date is invalid. Please choose another start date.");
                            break;
                        case "invalidE":
                            JOptionPane.showMessageDialog(rootPane, "The end date is invalid. Please choose another end date.");
                            break;
                        default:
                            booking.initialBooking();
                            //insert next page here
                            break;
                    }
                }
            }
        }
        catch(ParseException e){
            //if format is incorrect
            JOptionPane.showMessageDialog(rootPane, "Please ensure both dates are enterred according to the following format: \nyyyy-MM-dd");
        }
    }//GEN-LAST:event_bBookActionPerformed

    private void cbCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCarActionPerformed
        int cbSelected = cbCar.getSelectedIndex();
        if(cbSelected != 0){
            bBook.setEnabled(true);
            tfStartDate.setEditable(true);
            tfStartDate.setEnabled(true);
            tfEndDate.setEditable(true);
            tfEndDate.setEnabled(true);
        }
        else{
            bBook.setEnabled(false);
            tfStartDate.setEditable(false);
            tfStartDate.setEnabled(false);
            tfEndDate.setEditable(false);
            tfEndDate.setEnabled(false);
        }
    }//GEN-LAST:event_cbCarActionPerformed

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        dispose();
        customerMain frame = new customerMain();
        frame.setVisible(true);
    }//GEN-LAST:event_bBackActionPerformed

    private void tfStartDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfStartDateFocusLost

    }//GEN-LAST:event_tfStartDateFocusLost

    private void tfStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfStartDateActionPerformed

    private void tfEndDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEndDateFocusLost

    }//GEN-LAST:event_tfEndDateFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerCarBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerCarBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerCarBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerCarBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customerCarBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBack;
    private javax.swing.JButton bBook;
    private javax.swing.JComboBox<String> cbCar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tCar;
    private javax.swing.JTextField tfEndDate;
    private javax.swing.JTextField tfStartDate;
    // End of variables declaration//GEN-END:variables
}
